---
- name: Install PostgreSQL and related software
  apt:
    name: ['postgresql', 'postgresql-contrib', 'python3-psycopg2']
    update_cache: yes

- name: Enable and start PostgreSQL service
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Create eve user in PostgreSQL if not created before
  become_user: postgres
  postgresql_user:
    name: eve
    password: "{{ eve_db_password }}"
    encrypted: no

- name: Create dashboards database if not created before
  become_user: postgres
  postgresql_db: 
    name: dashboards
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    state: present

- name: Create pipelines database if not created before
  become_user: postgres
  postgresql_db: 
    name: pipelines
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    state: present

- name: Ensure eve user has access to the dashboards database
  become_user: postgres
  postgresql_user: 
    db: dashboards
    name: eve
    password: "{{ eve_db_password }}"
    priv: ALL
    state: present

- name: Provide access to eve user in dashboards database
  become_user: postgres
  postgresql_privs:
    db: dashboards
    role: eve
    objs: ALL_IN_SCHEMA
    privs: SELECT,INSERT,UPDATE,DELETE

- name: Ensure eve user has access to the pipelines database
  become_user: postgres
  postgresql_user: 
    db: pipelines
    name: eve
    password: "{{ eve_db_password }}"
    priv: ALL
    state: present

- name: Provide access to eve user in pipelines database
  become_user: postgres
  postgresql_privs:
    db: pipelines
    role: eve
    objs: ALL_IN_SCHEMA
    privs: SELECT,INSERT,UPDATE,DELETE

- name: Create pipeline table in pipelines database
  become_user: postgres
  postgresql_table:
    db: pipelines
    name: pipeline
    owner: eve
    columns:
    - topic text primary key

- name: Press enter to continue
  pause: prompt='Press enter to continue'
  when: prompt_when_finishes_tasks
